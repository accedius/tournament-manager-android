<Page x:Class="TournamentManager.Core.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:TournamentManager.Core.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:TournamentManager.Core.ViewModels" mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader x:Name="pageHeader" Text="Main Page">
            <!--  place stretched, across top  -->
            <RelativePanel.AlignTopWithPanel>True</RelativePanel.AlignTopWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <RelativePanel.AlignLeftWithPanel>True</RelativePanel.AlignLeftWithPanel>
            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoSettings}" Label="Settings" />
                <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>
        </controls:PageHeader>

        <controls:Resizer x:Name="parameterResizer" Margin="16,16,16,0">
            <!--  place below page header  -->
            <RelativePanel.Below>pageHeader</RelativePanel.Below>
            <RelativePanel.AlignLeftWithPanel>True</RelativePanel.AlignLeftWithPanel>
            <TextBox MinWidth="150" MinHeight="62"
                     Header="Parameter to pass"
                     Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     TextWrapping="Wrap">
                <Interactivity:Interaction.Behaviors>
                    <!--  enable submit on enter key  -->
                    <Behaviors:KeyBehavior Key="Enter">
                        <Core:CallMethodAction MethodName="GotoDetailsPage" TargetObject="{Binding}" />
                    </Behaviors:KeyBehavior>
                    <!--  focus on textbox when page loads  -->
                    <Core:EventTriggerBehavior>
                        <Behaviors:FocusAction />
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </TextBox>
        </controls:Resizer>


        <SemanticZoom x:Name="Zoom" ScrollViewer.ZoomMode="Enabled">

            <SemanticZoom.ZoomedInView>
                <ListView
                    x:Name="competitionsListView"
                    ScrollViewer.IsVerticalScrollChainingEnabled="False"
                    Margin="0"
                    ItemsSource="{Binding TheSource.View}" 
                    SelectionMode="{Binding ManageClickedMode}"
                    IsMultiSelectCheckBoxEnabled="{Binding ManageClicked}" 
                    SelectionChanged="{x:Bind ViewModel.managedListView_SelectionChanged}"
                    IsItemClickEnabled="{Binding ItemClickEnabled}" 
                    ItemClick="{x:Bind ViewModel.TournamentClick}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <!--   <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="ItemClick">
                            <Core:InvokeCommandAction Command="{Binding SelectionChangedCommand}" />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
-->
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="20,10,0,10" Holding="StackPanel_Holding">

                                <FlyoutBase.AttachedFlyout >
                                    <MenuFlyout Placement="top" >
                                        <MenuFlyoutItem Text="Delete" Tag="{Binding Id}" Click="MenuFlyoutItem_Click"></MenuFlyoutItem>
                                        <MenuFlyoutItem Text="Edit" Tag="{Binding Id}"></MenuFlyoutItem>
                                    </MenuFlyout>
                                </FlyoutBase.AttachedFlyout>
                                <TextBlock FontSize="20" Text="{Binding Name}"/>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Date}" VerticalAlignment="Top"/>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Location}" VerticalAlignment="Top"/>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top">
                                   Players: 20, Teams: <Run Text="{Binding Teams.Count}" />
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderContainerStyle>
                                <Style TargetType="ListViewBaseHeaderItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </GroupStyle.HeaderContainerStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel Padding="10,10,0,10" Orientation="Horizontal">
                                        <StackPanel.Background>
                                            <SolidColorBrush Color="{ThemeResource SystemBaseLowColor}"/>
                                        </StackPanel.Background>
                                        <TextBlock Text='{Binding Sport.Icon}' Margin="0,0,15,0"
                                         FontSize="18" FontFamily="Segoe UI Symbol" FontWeight="Light"/>
                                        <TextBlock Text='{Binding Sport.Name}' 
                                        FontSize="18" FontFamily="Segoe UI" FontWeight="Light"/>
                                    </StackPanel>

                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>

                    </ListView.GroupStyle>

                </ListView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>
                <ListView VerticalAlignment="Center" ItemsSource="{Binding TheSource.View.CollectionGroups}" HorizontalAlignment="Center" >
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" >
                                <TextBlock FontSize="20" FontFamily="Segoe UI Symbol" Margin="15,0"
                                   Text="{Binding Group.Sport.Icon}"
                                   />
                                <TextBlock FontSize="20" 
                                   Text="{Binding Group.Sport.Name}"
                                   />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>

                </ListView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>
        
    </RelativePanel>
</Page>

